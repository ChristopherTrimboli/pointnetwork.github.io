(self.webpackChunk=self.webpackChunk||[]).push([[840],{3905:function(t,e,i){"use strict";i.d(e,{Zo:function(){return d},kt:function(){return h}});var n=i(67294);function o(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function a(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function l(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?a(Object(i),!0).forEach((function(e){o(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function r(t,e){if(null==t)return{};var i,n,o=function(t,e){if(null==t)return{};var i,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)i=a[n],e.indexOf(i)>=0||(o[i]=t[i]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)i=a[n],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(t,i)&&(o[i]=t[i])}return o}var u=n.createContext({}),s=function(t){var e=n.useContext(u),i=e;return t&&(i="function"==typeof t?t(e):l(l({},e),t)),i},d=function(t){var e=s(t.components);return n.createElement(u.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var i=t.components,o=t.mdxType,a=t.originalType,u=t.parentName,d=r(t,["components","mdxType","originalType","parentName"]),c=s(i),h=o,k=c["".concat(u,".").concat(h)]||c[h]||p[h]||a;return i?n.createElement(k,l(l({ref:e},d),{},{components:i})):n.createElement(k,l({ref:e},d))}));function h(t,e){var i=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=i.length,l=new Array(a);l[0]=c;var r={};for(var u in e)hasOwnProperty.call(e,u)&&(r[u]=e[u]);r.originalType=t,r.mdxType="string"==typeof t?t:o,l[1]=r;for(var s=2;s<a;s++)l[s]=i[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,i)}c.displayName="MDXCreateElement"},23064:function(t,e,i){"use strict";i.r(e),i.d(e,{frontMatter:function(){return r},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return d},default:function(){return c}});var n=i(22122),o=i(19756),a=(i(67294),i(3905)),l=["components"],r={id:"modules",title:"Modules"},u="Point Network Modules",s={unversionedId:"modules",id:"modules",isDocsHomePage:!1,title:"Modules",description:"Below is a list of modules that are used for the Point Network Node prototype implementation.",source:"@site/docs/modules.md",sourceDirName:".",slug:"/modules",permalink:"/docs/modules",version:"current",lastUpdatedBy:"Darren Jensen",lastUpdatedAt:1629862881,formattedLastUpdatedAt:"8/25/2021",frontMatter:{id:"modules",title:"Modules"}},d=[{value:"API",id:"api",children:[{value:"Type",id:"type",children:[]},{value:"Functionality",id:"functionality",children:[]},{value:"Input Sources",id:"input-sources",children:[]},{value:"Output Destinations",id:"output-destinations",children:[]},{value:"Libraries",id:"libraries",children:[]},{value:"Modifications",id:"modifications",children:[]}]},{value:"Client ZProxy",id:"client-zproxy",children:[{value:"Type",id:"type-1",children:[]},{value:"Functionality",id:"functionality-1",children:[]},{value:"Input Sources",id:"input-sources-1",children:[]},{value:"Output Destinations",id:"output-destinations-1",children:[]},{value:"Libraries",id:"libraries-1",children:[]},{value:"Modifications",id:"modifications-1",children:[]}]},{value:"Client Storage",id:"client-storage",children:[{value:"Type",id:"type-2",children:[]},{value:"Functionality",id:"functionality-2",children:[]},{value:"Input Sources",id:"input-sources-2",children:[]},{value:"Output Destinations",id:"output-destinations-2",children:[]},{value:"Libraries",id:"libraries-2",children:[]},{value:"Modifications",id:"modifications-2",children:[]}]},{value:"Client Deployer",id:"client-deployer",children:[{value:"Type",id:"type-3",children:[]},{value:"Functionality",id:"functionality-3",children:[]},{value:"Input Sources",id:"input-sources-3",children:[]},{value:"Output Destinations",id:"output-destinations-3",children:[]},{value:"Libraries",id:"libraries-3",children:[]},{value:"Modifications",id:"modifications-3",children:[]}]},{value:"Client Renderer",id:"client-renderer",children:[{value:"Type",id:"type-4",children:[]},{value:"Functionality",id:"functionality-4",children:[]},{value:"Input Sources",id:"input-sources-4",children:[]},{value:"Output Destinations",id:"output-destinations-4",children:[]},{value:"Libraries",id:"libraries-4",children:[]},{value:"Modifications",id:"modifications-4",children:[]}]},{value:"Console",id:"console",children:[{value:"Type",id:"type-5",children:[]},{value:"Functionality",id:"functionality-5",children:[]},{value:"Input Sources",id:"input-sources-5",children:[]},{value:"Output Destinations",id:"output-destinations-5",children:[]},{value:"Libraries",id:"libraries-5",children:[]},{value:"Modifications",id:"modifications-5",children:[]}]},{value:"Core",id:"core",children:[{value:"Type",id:"type-6",children:[]},{value:"Functionality",id:"functionality-6",children:[]},{value:"Input Sources",id:"input-sources-6",children:[]},{value:"Output Destinations",id:"output-destinations-6",children:[]},{value:"Libraries",id:"libraries-6",children:[]},{value:"Modifications",id:"modifications-6",children:[]}]},{value:"DB",id:"db",children:[{value:"Type",id:"type-7",children:[]},{value:"Functionality",id:"functionality-7",children:[]},{value:"Input Sources",id:"input-sources-7",children:[]},{value:"Output Destinations",id:"output-destinations-7",children:[]},{value:"Libraries",id:"libraries-7",children:[]},{value:"Modifications",id:"modifications-7",children:[]}]},{value:"Network",id:"network",children:[{value:"Type",id:"type-8",children:[]},{value:"Functionality",id:"functionality-8",children:[]},{value:"Input Sources",id:"input-sources-8",children:[]},{value:"Output Destinations",id:"output-destinations-8",children:[]},{value:"Libraries",id:"libraries-8",children:[]},{value:"Modifications",id:"modifications-8",children:[]}]},{value:"Threads",id:"threads",children:[{value:"Type",id:"type-9",children:[]},{value:"Functionality",id:"functionality-9",children:[]},{value:"Input Sources",id:"input-sources-9",children:[]},{value:"Output Destinations",id:"output-destinations-9",children:[]},{value:"Libraries",id:"libraries-9",children:[]},{value:"Modifications",id:"modifications-9",children:[]}]},{value:"Truffle / Smart Contracts",id:"truffle--smart-contracts",children:[{value:"Type",id:"type-10",children:[]},{value:"Functionality",id:"functionality-10",children:[]},{value:"Input Sources",id:"input-sources-10",children:[]},{value:"Output Destinations",id:"output-destinations-10",children:[]},{value:"Libraries",id:"libraries-10",children:[]},{value:"Modifications",id:"modifications-10",children:[]}]}],p={toc:d};function c(t){var e=t.components,i=(0,o.Z)(t,l);return(0,a.kt)("wrapper",(0,n.Z)({},p,i,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"point-network-modules"},"Point Network Modules"),(0,a.kt)("p",null,"Below is a list of modules that are used for the Point Network Node prototype implementation."),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("h3",{id:"type"},"Type"),(0,a.kt)("p",null,"REST API Module"),(0,a.kt)("h3",{id:"functionality"},"Functionality"),(0,a.kt)("p",null,"Used as a 1 to 1 endpoint for a Point Network client to communicate with a single node. In the prototype the available routes are a ping route for checking the API is up and running and a deploy route that is for deployment of ZWeb website content templates."),(0,a.kt)("p",null,"In the prototype each demo node has this API running on different ports as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Demo 1"),": Port 2468 (http://localhost:2468/ping)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Demo 2"),": Port 2469 (http://localhost:2469/ping)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Demo 3"),": Port 24469 (http://localhost:24469/ping)")),(0,a.kt)("h3",{id:"input-sources"},"Input Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Console Module"),(0,a.kt)("li",{parentName:"ul"},"Point CLI (which calls the API Module through a Console Module wrapper)")),(0,a.kt)("h3",{id:"output-destinations"},"Output Destinations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"JSON Response Payloads specific to each request returned to caller")),(0,a.kt)("h3",{id:"libraries"},"Libraries"),(0,a.kt)("p",null,"The prototype uses ",(0,a.kt)("a",{parentName:"p",href:"https://www.fastify.io/"},"Fastify JS"),"."),(0,a.kt)("h3",{id:"modifications"},"Modifications"),(0,a.kt)("p",null,"Fastify is a great choice for the Prototype. It's similar to most API based frameworks in the actual functionality and configuration / api that it provides as a framework. Equivalents would be that of ",(0,a.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"Express JS")," or ",(0,a.kt)("a",{parentName:"p",href:"https://hapi.dev/"},"Hapi"),"."),(0,a.kt)("p",null,"There is no obvious reason or benefit at this point to change from using Fastify JS."),(0,a.kt)("h2",{id:"client-zproxy"},"Client ZProxy"),(0,a.kt)("h3",{id:"type-1"},"Type"),(0,a.kt)("p",null,"ZWeb Proxy Server"),(0,a.kt)("h3",{id:"functionality-1"},"Functionality"),(0,a.kt)("p",null,"Provides ZDNS lookups for ZWeb domain names (.z) and applies the appropriate routing based on loading the routes, loading a file, sending a contract or key/value append."),(0,a.kt)("p",null,"When the request enters the ZProxy server with a ZWeb domain (ending in .z) the route file for that domain is loaded via a lookup function getZRouteIdFromDomain. This function looks up the ZRouteId from the Identity Smart Contract which is then used to load the routes.json file from the storage layer using that id."),(0,a.kt)("p",null,"In the prototype each demo node has the ZProxy server running on different ports as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Demo 1"),": Port 8666 (http://localhost:8666/)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Demo 2"),": Port 65500 (http://localhost:65500/)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Demo 3"),": Port 65501 (http://localhost:65501/)")),(0,a.kt)("h3",{id:"input-sources-1"},"Input Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Point Network Browser HTTP requests to proxy such that .z domains will be routed to the ZProxy endpoint. This makes the ",(0,a.kt)("em",{parentName:"li"},"host")," of the .z domain the Point Network Identity that is used. So ",(0,a.kt)("em",{parentName:"li"},"example.z")," will have the identity lookup of  \u2018example\u2019.")),(0,a.kt)("h3",{id:"output-destinations-1"},"Output Destinations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The (sanitized) rendered HTML.")),(0,a.kt)("h3",{id:"libraries-1"},"Libraries"),(0,a.kt)("p",null,"The module uses the Node http package for request / response. The ",(0,a.kt)("em",{parentName:"p"},"sanitize-html")," library is also used. Sanitizing is an option (for the demo). There is a config (sanitizing-config.js) which defines the allowed tags, attributes etc."),(0,a.kt)("h3",{id:"modifications-1"},"Modifications"),(0,a.kt)("p",null,"It might be suitable to use the Fastify JS library as the API module does.s"),(0,a.kt)("h2",{id:"client-storage"},"Client Storage"),(0,a.kt)("h3",{id:"type-2"},"Type"),(0,a.kt)("p",null,"Storage Layer Module"),(0,a.kt)("h3",{id:"functionality-2"},"Functionality"),(0,a.kt)("p",null,"Provides uploading, chunking, encrypting, storing and caching of files. Mostly for the demo these are files used for ZWeb sites."),(0,a.kt)("h3",{id:"input-sources-2"},"Input Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Point CLI deploy command")),(0,a.kt)("h3",{id:"output-destinations-2"},"Output Destinations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Once uploaded successfully a JSON response ",(0,a.kt)("em",{parentName:"li"},'{"{"} status: \'success\' {"}"}')," is returned."),(0,a.kt)("li",{parentName:"ul"},"Stored file chunks are saved in a local ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/google/leveldb"},"LevelDB")," via the DB Module")),(0,a.kt)("h3",{id:"libraries-2"},"Libraries"),(0,a.kt)("p",null,"Makes indirect use (via the DB Module) of ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Level/level"},"LevelJS"),"."),(0,a.kt)("h3",{id:"modifications-2"},"Modifications"),(0,a.kt)("p",null,"Code could be broken down into various sub modules for maintainability."),(0,a.kt)("h2",{id:"client-deployer"},"Client Deployer"),(0,a.kt)("h3",{id:"type-3"},"Type"),(0,a.kt)("p",null,"ZWeb Deployment"),(0,a.kt)("h3",{id:"functionality-3"},"Functionality"),(0,a.kt)("p",null,"Uploads templates, parses each template for sub templates recursively, deploys the ZWeb Smart Contract (if any) and updates the ZDNS."),(0,a.kt)("h3",{id:"input-sources-3"},"Input Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Via the Point Network CLI deploy command")),(0,a.kt)("h3",{id:"output-destinations-3"},"Output Destinations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Lots of output relating to the chunking of files as well as updates to the blockchain, transaction receipts and so on.")),(0,a.kt)("h3",{id:"libraries-3"},"Libraries"),(0,a.kt)("p",null,"Truffle for deployment and interaction of Smart Contracts on the blockchain."),(0,a.kt)("h3",{id:"modifications-3"},"Modifications"),(0,a.kt)("p",null,"Maybe ways to simplify, use existing parsing libraries, avoid parsing html using regex, parallelization of parsing and so on."),(0,a.kt)("h2",{id:"client-renderer"},"Client Renderer"),(0,a.kt)("h3",{id:"type-4"},"Type"),(0,a.kt)("p",null,"ZHTML rendering Module"),(0,a.kt)("h3",{id:"functionality-4"},"Functionality"),(0,a.kt)("p",null,"Renders ZHTML templates into HTML output for returning to the browser."),(0,a.kt)("h3",{id:"input-sources-4"},"Input Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ZHTML template")),(0,a.kt)("h3",{id:"output-destinations-4"},"Output Destinations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"HTML content")),(0,a.kt)("h3",{id:"libraries-4"},"Libraries"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/twigjs/twig.js/"},"Twig JS")),(0,a.kt)("h3",{id:"modifications-4"},"Modifications"),(0,a.kt)("p",null,"None at the moment."),(0,a.kt)("h2",{id:"console"},"Console"),(0,a.kt)("h3",{id:"type-5"},"Type"),(0,a.kt)("p",null,"A REPL terminal for interacting with a Point Network node."),(0,a.kt)("h3",{id:"functionality-5"},"Functionality"),(0,a.kt)("p",null,"Provides a way to interact with a Point Network node via a REPL terminal."),(0,a.kt)("h3",{id:"input-sources-5"},"Input Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Start the Console (./point attach) and interact with a node via commands (api ping).")),(0,a.kt)("h3",{id:"output-destinations-5"},"Output Destinations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Output from calls to the API Module (when the command is prefixed with \u2018api\u2019 - see example input above).")),(0,a.kt)("h3",{id:"libraries-5"},"Libraries"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/api/readline.html"},"Readline JS")," and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/axios/axios"},"Axios JS"),"."),(0,a.kt)("h3",{id:"modifications-5"},"Modifications"),(0,a.kt)("p",null,"None at the moment."),(0,a.kt)("h2",{id:"core"},"Core"),(0,a.kt)("h3",{id:"type-6"},"Type"),(0,a.kt)("p",null,"A core set of entrypoint, wrapper and utils code for Point Network."),(0,a.kt)("h3",{id:"functionality-6"},"Functionality"),(0,a.kt)("p",null,"Provides wrappers to main libraries for deployment as well as initialization of services required for the node."),(0,a.kt)("h3",{id:"input-sources-6"},"Input Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Point Executable")),(0,a.kt)("h3",{id:"output-destinations-6"},"Output Destinations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Various based on the libraries and modules called.")),(0,a.kt)("h3",{id:"libraries-6"},"Libraries"),(0,a.kt)("p",null,"See all other modules for the libraries used."),(0,a.kt)("h3",{id:"modifications-6"},"Modifications"),(0,a.kt)("p",null,"None at the moment."),(0,a.kt)("h2",{id:"db"},"DB"),(0,a.kt)("h3",{id:"type-7"},"Type"),(0,a.kt)("p",null,"Database Module"),(0,a.kt)("h3",{id:"functionality-7"},"Functionality"),(0,a.kt)("p",null,"Provides database schema, persistence logic using LevelDB wrapper."),(0,a.kt)("h3",{id:"input-sources-7"},"Input Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Client Storage Module")),(0,a.kt)("h3",{id:"output-destinations-7"},"Output Destinations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Any module that needs to fetch stored files.")),(0,a.kt)("h3",{id:"libraries-7"},"Libraries"),(0,a.kt)("p",null,"Level JS is used as a wrapper for LevelDB"),(0,a.kt)("h3",{id:"modifications-7"},"Modifications"),(0,a.kt)("p",null,"None at the moment."),(0,a.kt)("h2",{id:"network"},"Network"),(0,a.kt)("h3",{id:"type-8"},"Type"),(0,a.kt)("p",null,"Network Module"),(0,a.kt)("h3",{id:"functionality-8"},"Functionality"),(0,a.kt)("p",null,"Includes DHT network (kademlia js), key value management and a bridge to the blockchain. Essentially it is for Point Network node discovery and communication establishment between peers."),(0,a.kt)("h3",{id:"input-sources-8"},"Input Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Kademlia peer nodes, ZWeb Client.")),(0,a.kt)("h3",{id:"output-destinations-8"},"Output Destinations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Ethereum Blockchain, LevelDB and other Kademlia peer nodes using RPC.")),(0,a.kt)("h3",{id:"libraries-8"},"Libraries"),(0,a.kt)("p",null,"Kademlia JS, BSON parser (good-bson), @deadcanaries/kadence"),(0,a.kt)("h3",{id:"modifications-8"},"Modifications"),(0,a.kt)("p",null,"Improvements are noted in the source code \u2018todo\u2019 comments."),(0,a.kt)("h2",{id:"threads"},"Threads"),(0,a.kt)("h3",{id:"type-9"},"Type"),(0,a.kt)("p",null,"Encryption Module"),(0,a.kt)("h3",{id:"functionality-9"},"Functionality"),(0,a.kt)("p",null,"For encryption / decryption process"),(0,a.kt)("h3",{id:"input-sources-9"},"Input Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Encrypted files from the storage layer")),(0,a.kt)("h3",{id:"output-destinations-9"},"Output Destinations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Decrypted files")),(0,a.kt)("h3",{id:"libraries-9"},"Libraries"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/crypto-js"},"Crypto JS")),(0,a.kt)("h3",{id:"modifications-9"},"Modifications"),(0,a.kt)("p",null,"Module could be renamed to Encryption."),(0,a.kt)("h2",{id:"truffle--smart-contracts"},"Truffle / Smart Contracts"),(0,a.kt)("h3",{id:"type-10"},"Type"),(0,a.kt)("p",null,"Solidity Smart Contracts for Point Network applications."),(0,a.kt)("h3",{id:"functionality-10"},"Functionality"),(0,a.kt)("p",null,"Provides Blockchain layer data for Point Network such as Identity, File Hashes, Ownership and so on."),(0,a.kt)("h3",{id:"input-sources-10"},"Input Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Storage Layer, Client")),(0,a.kt)("h3",{id:"output-destinations-10"},"Output Destinations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Hashes back to the Point Network Node.")),(0,a.kt)("h3",{id:"libraries-10"},"Libraries"),(0,a.kt)("p",null,"Truffle"),(0,a.kt)("h3",{id:"modifications-10"},"Modifications"),(0,a.kt)("p",null,"Utility / helper methods such as ","_","isValidHandle and ","_","toLower can be imported from utility libraries of which OpenZeppelin being a very popular solution to use for example ",(0,a.kt)("a",{parentName:"p",href:"https://docs.openzeppelin.com/contracts/3.x/utilities"},"Utilities")))}c.isMDXComponent=!0}}]);