"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[803],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),d=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=d(n),h=r,k=u["".concat(p,".").concat(h)]||u[h]||s[h]||a;return n?o.createElement(k,l(l({ref:t},c),{},{components:n})):o.createElement(k,l({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var d=2;d<a;d++)l[d]=n[d];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},70670:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var o=n(83117),r=n(80102),a=(n(67294),n(3905)),l=["components"],i={id:"build-run-dev-node-and-services",title:"Run dev Point Node services",sidebar_label:"Run dev Point Node services",slug:"../build-run-dev-node-and-services"},p=void 0,d={unversionedId:"build/build-run-dev-node-and-services",id:"build/build-run-dev-node-and-services",title:"Run dev Point Node services",description:"Prerequisites",source:"@site/docs/build/build-run-dev-node-and-services.md",sourceDirName:"build",slug:"/build-run-dev-node-and-services",permalink:"/docs/build-run-dev-node-and-services",editUrl:"https://github.com/pointnetwork/pointnetwork.github.io/edit/main/website/docs/build/build-run-dev-node-and-services.md",tags:[],version:"current",lastUpdatedBy:"Darren Jensen",lastUpdatedAt:1649663678,formattedLastUpdatedAt:"4/11/2022",frontMatter:{id:"build-run-dev-node-and-services",title:"Run dev Point Node services",sidebar_label:"Run dev Point Node services",slug:"../build-run-dev-node-and-services"},sidebar:"pnSidebar",previous:{title:"Point Network Builders Starter's Guide",permalink:"/docs/build-build-with-point-network"},next:{title:"Testing Guide",permalink:"/docs/build-testing-guide"}},c=[{value:"Prerequisites",id:"prerequisites",children:[{value:"Install Arlocal",id:"install-arlocal",children:[],level:3},{value:"Install Ganache CLI",id:"install-ganache-cli",children:[],level:3},{value:"Deploy Point Contracts",id:"deploy-point-contracts",children:[],level:3}],level:2},{value:"Setup Local Point Node Config",id:"setup-local-point-node-config",children:[],level:2},{value:"Run the Point Node",id:"run-the-point-node",children:[{value:"(Optional) Start a Hardhat console",id:"optional-start-a-hardhat-console",children:[],level:3}],level:2}],s={toc:c};function u(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"You need to install Arlocal and Ganache-CLI as dependent services for Point Node to use."),(0,a.kt)("h3",{id:"install-arlocal"},"Install Arlocal"),(0,a.kt)("p",null,"To install an start Arlocal:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Clone the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/textury/arlocal"},"Arlocal")," repo"),(0,a.kt)("li",{parentName:"ol"},"Run ",(0,a.kt)("inlineCode",{parentName:"li"},"npx arlocal"))),(0,a.kt)("h3",{id:"install-ganache-cli"},"Install Ganache CLI"),(0,a.kt)("p",null,"To install and start Ganache blockchain using Ganache CLI:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install globally via npm: ",(0,a.kt)("inlineCode",{parentName:"li"},"npm i -g ganache-cli")),(0,a.kt)("li",{parentName:"ol"},"Start Ganache blockchain on port 7545 including a specific prefunded account: ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ganache-cli -v -p 7545 -i 256 --keepAliveTimeout 20000 --account 0x011967d88c6b79116bb879d4c2bc2c3caa23569edd85dfe0bc596846837bbc8e,0x56bc75e2d63100000\n")),(0,a.kt)("h3",{id:"deploy-point-contracts"},"Deploy Point Contracts"),(0,a.kt)("p",null,"To deploy the Point Contracts:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd hardhat\nrm -rf cache\nnpx hardhat compile\nnpx hardhat run scripts/deploy.ts --network development\n")),(0,a.kt)("h2",{id:"setup-local-point-node-config"},"Setup Local Point Node Config"),(0,a.kt)("p",null,"Create a new profile directory on your local machine for ",(0,a.kt)("inlineCode",{parentName:"p"},"devlocal"),". This is the profile that you can use for running the dev Point Node directly on your own computer without using Docker. This folder can be wherever you like. In this tutorial we will create the profile under ",(0,a.kt)("inlineCode",{parentName:"p"},"~/workspace/pn/devlocal"),". "),(0,a.kt)("p",null,"Run the ",(0,a.kt)("inlineCode",{parentName:"p"},"mkdir")," command below which will create the folders shown:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"mkdir -p ~/workspace/pn/devlocal/keystore\n")),(0,a.kt)("p",null,"Copy the dev wallet key and arweave key from the pointnetowrk repository into the ",(0,a.kt)("inlineCode",{parentName:"p"},"keystore")," directory that you created in the previous step."),(0,a.kt)("p",null,"Run the ",(0,a.kt)("inlineCode",{parentName:"p"},"cp")," command below. This assumes that you are currently in the cloned pointnetwork repository folder and you have already created the 'keystore' folder in the location specified earlier. Feel free to change this according to your system:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cp resources/blockchain-test-key.json ~/workspace/pn/devlocal/keystore/key.json\ncp resources/arweave-test-key.json ~/workspace/pn/devlocal/keystore/arweave.json\n")),(0,a.kt)("p",null,"Create a ",(0,a.kt)("inlineCode",{parentName:"p"},"devlocal.yaml")," config file and save it in the pointnetwork repo ",(0,a.kt)("inlineCode",{parentName:"p"},"config")," directory. NOTE: This file is ignored by the ",(0,a.kt)("inlineCode",{parentName:"p"},"gitignore")," file automatically so do not commit this!"),(0,a.kt)("p",null,"Below is an example, You would only need to change ",(0,a.kt)("inlineCode",{parentName:"p"},"datadir")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"wallet.keystore_path")," values if you have created your profile in a different directory to what is specified:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"NOTE"),": You may need to replace the tilde (~) in the directory path below and expand that to the full path, so on a Mac this would be ",(0,a.kt)("inlineCode",{parentName:"p"},"/Users/YOUR_USERNAME/pn/devlocal")," etc."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"NOTE"),": You can change ",(0,a.kt)("inlineCode",{parentName:"p"},"zappsdir")," to any directory on your computer so that it points to the location where you have all your own personal Zapps that you are developing."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"datadir: ~/workspace/pn/devlocal\nzappsdir: ./example\nwallet:\n  keystore_path: ~/workspace/pn/devlocal/keystore\nmode: zappdev\nlog:\n  sendLogs: false\n  level: debug\nstorage:\n  arweave_host: localhost\n  arweave_protocol: http\n  arweave_port: 1984\n  use_arweave_bundler: false\n  use_arlocal: true\n  arweave_gateway_url: http://localhost:1984/graphql\nnetwork:\n  web3: http://localhost:7545\napi:\n  address: 127.0.0.1\nzproxy:\n  host: 127.0.0.1\n")),(0,a.kt)("p",null,"Ensure that you have loaded the alias commands into your current terminal session."),(0,a.kt)("p",null,"Run the following command from the root of the cloned pointnetwork repo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"source .bash_alias\n")),(0,a.kt)("p",null,"Create a profile in Firefox called ",(0,a.kt)("inlineCode",{parentName:"p"},"pointnetwork")," that has a proxy set to route all http / https traffic to ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost:8666"),". Don't forget to add the ",(0,a.kt)("a",{parentName:"p",href:"/docs/build-build-with-point-network#create-a-point-network-profile-in-firefox"},"Point Network CA certificate")," to the new profile in Firefox. "),(0,a.kt)("h2",{id:"run-the-point-node"},"Run the Point Node"),(0,a.kt)("p",null,"The above setup steps only need to be performed once. Going forward you can start a Point Node using:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm i\npoint-dev\n")),(0,a.kt)("p",null,"You can deploy a Zapp from the ",(0,a.kt)("inlineCode",{parentName:"p"},"example")," folder using (this will deploy ",(0,a.kt)("inlineCode",{parentName:"p"},"blog.point"),"):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"point-deploy example/blog.point --contracts\n")),(0,a.kt)("p",null,"Open a local Point Browser that connects to the Point Node proxy (which is running on port 8666 since there is no port mapping applied when running the Point Node outside of Docker)."),(0,a.kt)("p",null,"NOTE: This has to be run from within the cloned ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/pointnetwork/pointsdk"},"PointSDK repo")," folder which you will have already setup according to the instructions ",(0,a.kt)("a",{parentName:"p",href:"/docs/build-build-with-point-network#create-a-point-network-profile-in-firefox"},"here"),"."),(0,a.kt)("p",null,"Run the command below which assumes that you already have created the ",(0,a.kt)("inlineCode",{parentName:"p"},"pointnetwork")," profile as stated earlier:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"point-browser\n")),(0,a.kt)("h3",{id:"optional-start-a-hardhat-console"},"(Optional) Start a Hardhat console"),(0,a.kt)("p",null,"If you want to start a hardhat console:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npx hardhat console --network development\n")),(0,a.kt)("p",null,"Then you can interact with the deployed Point contracts, for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"identity = await ethers.getContractAt(\"identity\", \"0xD61e5eFcB183418E1f6e53D0605eed8167F90D4d\")\nawait identity.ikvGet('blog', 'zweb/contracts/address/Blog')\n")))}u.isMDXComponent=!0}}]);