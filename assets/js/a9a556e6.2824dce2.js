"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8451],{3905:function(t,e,n){n.d(e,{Zo:function(){return d},kt:function(){return u}});var a=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,i=function(t,e){if(null==t)return{};var n,a,i={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var p=a.createContext({}),c=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},d=function(t){var e=c(t.components);return a.createElement(p.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},h=a.forwardRef((function(t,e){var n=t.components,i=t.mdxType,r=t.originalType,p=t.parentName,d=l(t,["components","mdxType","originalType","parentName"]),h=c(n),u=i,m=h["".concat(p,".").concat(u)]||h[u]||s[u]||r;return n?a.createElement(m,o(o({ref:e},d),{},{components:n})):a.createElement(m,o({ref:e},d))}));function u(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=n.length,o=new Array(r);o[0]=h;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},47811:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return d},default:function(){return h}});var a=n(83117),i=n(80102),r=(n(67294),n(3905)),o=["components"],l={id:"build-upgrade-identity-contract",title:"Upgrade the Identity contract",sidebar_label:"Upgrade the Identity contract",slug:"../build-upgrade-identity-contract"},p=void 0,c={unversionedId:"build/build-upgrade-identity-contract",id:"build/build-upgrade-identity-contract",title:"Upgrade the Identity contract",description:"The Identity contract is at the heart of Point Network. Sometimes it needs to have some functionality added to it over time.",source:"@site/docs/build/build-upgrade-identity-contract.md",sourceDirName:"build",slug:"/build-upgrade-identity-contract",permalink:"/docs/build-upgrade-identity-contract",editUrl:"https://github.com/pointnetwork/pointnetwork.github.io/edit/main/website/docs/build/build-upgrade-identity-contract.md",tags:[],version:"current",lastUpdatedBy:"Darren Jensen",lastUpdatedAt:1658993816,formattedLastUpdatedAt:"7/28/2022",frontMatter:{id:"build-upgrade-identity-contract",title:"Upgrade the Identity contract",sidebar_label:"Upgrade the Identity contract",slug:"../build-upgrade-identity-contract"},sidebar:"pnSidebar",previous:{title:"Using Identity Oracle in dev",permalink:"/docs/build-use-identity-oracle-in-devlocal"},next:{title:"Testing Guide",permalink:"/docs/build-testing-guide"}},d=[{value:"Overview",id:"overview",children:[],level:3},{value:"Technical Process",id:"technical-process",children:[],level:3},{value:"Troubleshooting",id:"troubleshooting",children:[],level:3},{value:"Interact with Identity Contract in Hardhat Console",id:"interact-with-identity-contract-in-hardhat-console",children:[],level:3},{value:"Steps to migrate data to a new Identity contract instance",id:"steps-to-migrate-data-to-a-new-identity-contract-instance",children:[],level:3}],s={toc:d};function h(t){var e=t.components,n=(0,i.Z)(t,o);return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The Identity contract is at the heart of Point Network. Sometimes it needs to have some functionality added to it over time. "),(0,r.kt)("p",null,"In this page we will outline how to upgrade the deployed Identity contract and how to interact with the Identity contract in a Hardhat console."),(0,r.kt)("h3",{id:"overview"},"Overview"),(0,r.kt)("p",null,"To upgrade the Identity contract with a new version you need to perform the following steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Ensure that the Identity contract owners seed phrase is currently saved in the ",(0,r.kt)("inlineCode",{parentName:"li"},"~/.point/keystore/key.json")," file. This is automatically parsed in the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/pointnetwork/point-contracts/blob/main/hardhat.config.ts#L24"},"hardhat config")," file when connecting to Ynet."),(0,r.kt)("li",{parentName:"ol"},"Compile the Identity contract"),(0,r.kt)("li",{parentName:"ol"},"Run the Hardhat task to update the contract on a specific network (Ynet)"),(0,r.kt)("li",{parentName:"ol"},"Commit the updated ",(0,r.kt)("inlineCode",{parentName:"li"},"unknown-10700.json")," file to the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/pointnetwork/point-contracts/"},"point-contracts")," repo so that it can be referenced for the next contract upgrade."),(0,r.kt)("li",{parentName:"ol"},"Update the Identity contract ABI file in Arweave"),(0,r.kt)("li",{parentName:"ol"},"Copy the Areweave file hash and use that to update the ",(0,r.kt)("inlineCode",{parentName:"li"},"default.yaml")," file in the Point Engine repo.")),(0,r.kt)("h3",{id:"technical-process"},"Technical Process"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Ensure that the Identity contract owners seed phrase is currently saved in the ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.point/keystore/key.json")," file. "),(0,r.kt)("p",{parentName:"li"},"This step can be done by logging into Point Network via the Point Dashboard using the seed phrase of the Identity owner. "),(0,r.kt)("p",{parentName:"li"},"This is needed because ",(0,r.kt)("strong",{parentName:"p"},"only the owner")," of the Identity contract can upgrade it. ")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Compile the contract"),(0,r.kt)("p",{parentName:"li"},"Use Hardhat to compile the Identity contract like so:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"npx hardhat compile\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run the Hardhat task to update the contract on a specific network"),(0,r.kt)("p",{parentName:"li"},"To update the Identity contract you can run the following command from the cloned ",(0,r.kt)("inlineCode",{parentName:"p"},"point-contracts")," repo folder"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"npx hardhat identity-update-contract 0x1574E97F7a60c4eE518f6d7c0Fa701eff8Ab58b3 ./resources/unknown-10700.json --network ynet\n")),(0,r.kt)("p",{parentName:"li"},"Details are in the ",(0,r.kt)("inlineCode",{parentName:"p"},"identity-update-contract")," task source code ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pointnetwork/point-contracts/blob/main/tasks/identity/identity-update-contract.ts"},"here"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Commit the updated ",(0,r.kt)("inlineCode",{parentName:"p"},"unknown-10700.json")," file to the point-contracts repo"),(0,r.kt)("p",{parentName:"li"},"Commit ",(0,r.kt)("inlineCode",{parentName:"p"},"unknown-10700.json")," file after running the command to store proxy metadata for further deployments.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Update the Identity contract ABI file in Arweave"),(0,r.kt)("p",{parentName:"li"},"This has to be done using the ",(0,r.kt)("inlineCode",{parentName:"p"},"point")," cli and so you will need to cd into the Point Engine repo first."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"cd pointnetwork\n./point upload ../point-contracts/build/contracts/Identity.sol/Identity.json\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Copy the Areweave file hash and use that to update the ",(0,r.kt)("inlineCode",{parentName:"p"},"default.yml")," file in the Point Engine repo."),(0,r.kt)("p",{parentName:"li"},"The returned Arweave file hash for the Identity contract ABI needs to be set in the ",(0,r.kt)("inlineCode",{parentName:"p"},"identity_contract_id")," key of the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pointnetwork/pointnetwork/blob/develop/config/default.yaml#L3"},"default.yaml")," file in the Point Engine repo."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Make sure to remember to commit all the code changes back to Github and to check the deployment of the contract.")),(0,r.kt)("h3",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("p",null,"If you see the following errors after running the upgrade script..."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Error: Timed out waiting for implementation contract deployment to address")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"cannot estimate gas; transaction may fail or may require manual gas limit UNPREDICTABLE_GAS_LIMIT")),(0,r.kt)("p",null,"...try this workaround to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenZeppelin/openzeppelin-upgrades/issues/85"},"Override transaction options")," (from, gas, gasPrice) in create and upgrade proxy."),(0,r.kt)("h3",{id:"interact-with-identity-contract-in-hardhat-console"},"Interact with Identity Contract in Hardhat Console"),(0,r.kt)("p",null,"Firstly make sure you are in the point-contracts repo and then start hardhat console like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd point-contracts\nnpx hardhat console --network ynet\n")),(0,r.kt)("p",null,"Now in the Hardhat console you can load the Identity contract and start to call functions. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"// Load Identity Contract instance\nid = await hre.ethers.getContractAt(\"Identity\", \"0x1574E97F7a60c4eE518f6d7c0Fa701eff8Ab58b3\");\n \n// Check the owner of the Identity contract \nawait id.owner()\n \n// Check dev mode setting\nawait id.getDevMode()\n \n// Fetch IKV values from the contract, e.g.\nawait id.ikvGet('social', 'zweb/contracts/address/PointSocial')\n")),(0,r.kt)("h3",{id:"steps-to-migrate-data-to-a-new-identity-contract-instance"},"Steps to migrate data to a new Identity contract instance"),(0,r.kt)("p",null,"If you experience issues with the upgrade process then you can also redeploy a brand new instance of the Identity contract. However, if you do so, you will need to migrate all the data accross from the current Indentity instance to the new Identity instance."),(0,r.kt)("p",null,"The steps to perform the Identity contract deployment and data migration are as follows:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Switch to ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch in Point Contracts repo and compile the Identity contract using"),(0,r.kt)("p",{parentName:"li"}," ",(0,r.kt)("inlineCode",{parentName:"p"},"npx hardhat compile"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Download the data from the existing Identity contract using "),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"npx hardhat identity-importer download 0x1574E97F7a60c4eE518f6d7c0Fa701eff8Ab58b3 --network ynet"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Switch to the branch that contains the latest version of the Identity contract you want to deploy")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Compile and deploy a ",(0,r.kt)("strong",{parentName:"p"},"new")," instance of the Identity contract from that branch to YNet using "),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"npx hardhat run scripts/deploy.ts --network ynet"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"From the Point Engine repo upload the updated Identity ABI using "),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"./point upload build/contracts/Identity.sol/Identity.json"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Update ",(0,r.kt)("inlineCode",{parentName:"p"},"default.yaml")," in Point Engine repo and set ",(0,r.kt)("inlineCode",{parentName:"p"},"identity_contract_id")," to the Identity ABI hash returned in the previous call. ")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Update ",(0,r.kt)("inlineCode",{parentName:"p"},"default.yaml")," in Point Engine and set ",(0,r.kt)("inlineCode",{parentName:"p"},"identity_contract_address")," to the new Identity contract address just deployed.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Upload the Identity data to the new Identity contract instance using "),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"npx hardhat identity-importer upload NEW_ADDRESS --migration-file ./resources/migrations/identity-TIMESTAMP.json  --network ynet"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Verify the Identities have been migrated correctly to the new contract using Hardhat console")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Merge these changes (the updated Identity contract, updated default.yaml etc)"))))}h.isMDXComponent=!0}}]);