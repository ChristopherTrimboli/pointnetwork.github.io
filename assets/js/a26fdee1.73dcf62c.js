(self.webpackChunk=self.webpackChunk||[]).push([[935],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=i,g=d["".concat(l,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},60159:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(22122),i=n(19756),a=(n(67294),n(3905)),o=["components"],s={id:"build-testing-guide",title:"Point Network Testing Guide",sidebar_label:"Testing Guide",slug:"../build-testing-guide"},l=void 0,u={unversionedId:"build/build-testing-guide",id:"build/build-testing-guide",isDocsHomePage:!1,title:"Point Network Testing Guide",description:"Point Network needs to test all levels of the application. This potentially means:",source:"@site/docs/build/build-testing-guide.md",sourceDirName:"build",slug:"/build-testing-guide",permalink:"/docs/build-testing-guide",tags:[],version:"current",lastUpdatedBy:"Darren Jensen",lastUpdatedAt:1630032402,formattedLastUpdatedAt:"8/27/2021",frontMatter:{id:"build-testing-guide",title:"Point Network Testing Guide",sidebar_label:"Testing Guide",slug:"../build-testing-guide"},sidebar:"pnSidebar",previous:{title:"Point Network Builders Starter's Guide",permalink:"/docs/build-build-with-point-network"},next:{title:"Integration Initiation",permalink:"/docs/build-integration"}},c=[],p={toc:c};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Point Network needs to test all levels of the application. This potentially means:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Unit Testing")," of functions and methods using ",(0,a.kt)("a",{parentName:"li",href:"https://jestjs.io/"},"Jest")," in the Node and ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/pointnetwork/pointsdk"},"Point SDK"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Use Factories")," for creating data in different schemas and contexts using ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/simonexmachina/factory-girl"},"Factory Girl"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Integration Testing")," of different components / modules and services."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Browser / Front End integration testing")," using ",(0,a.kt)("a",{parentName:"li",href:"https://nightwatchjs.org/"},"Nightwatch JS"),". This can be another form of integration testing for the example applications which ultimately test that the node is working properly for application functionality."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Smart Contract Tests")," using ",(0,a.kt)("a",{parentName:"li",href:"https://www.trufflesuite.com/docs/truffle/testing/testing-your-contracts"},"Truffle Testing Framework")," and ",(0,a.kt)("a",{parentName:"li",href:"https://docs.openzeppelin.com/learn/writing-automated-tests"},"Open Zeppelin Testing Framework"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Load testing")," using ",(0,a.kt)("a",{parentName:"li",href:"artillery.io"},"artillery.io"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Database testing")," making use of test seed data and using a ",(0,a.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/database-cleaner"},"database cleaner")," to reset the database between tests. Use Factory Girl for creating contextual based data for each test.")))}d.isMDXComponent=!0}}]);